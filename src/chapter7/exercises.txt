Exercises: Variety pack

1. Given the following declarations:

   k (x, y) = x
   k1 = k ((4-1), 10)
   k2 = k ("three", (1 + 2))
   k3 = k (3, True)

     a) What is the type of k?

        k :: (a, b) -> a

     b) What is the type of k2? Is it the same type as k1 or k3?

        k2 :: String
        k1 :: Num a => a
        k3 :: Num a => a

        It is not the same type as k1 or k3.

     c) Of k1, k2, k3, which will return the number3 as the result?

        k1, k3

2. Fill in the definition of the following function:

   f :: (a, b, c)
     -> (d, e, f)
     -> ((a, d), (c, f))
   f (a, b, c) (d, e, f) = ((a, d), (c, f))

Exercises: Case practice

1. functionC x y =
     case x > y of
       True  -> x
       False -> y

2. ifEvenAdd2 n =
     case even n of
       True  -> n + 2
       False -> n

3. nums x =
     case compare x 0 of
       LT -> -1
       GT -> 1
       EQ -> 0
